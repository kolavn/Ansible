- name: create ec2 and r53 records
  hosts: local
  connection: local
  vars:
    subnet_id: subnet-09130f84da7beefb1
    sg_id: "sg-09eba9a9adf487f36"
    ami_id: "ami-09c813fb71547fc4f"
    instances:
    - mysql
    - backend
    - frontend
    zone: devopsveda.online
  tasks:
  - name: create ec2 instance
    amazon.aws.ec2_instance:   # this is the module available in documentation
      name: "{{ item }}"
      vpc_subnet_id: "{{ subnet_id }}"
      instance_type: "t2.micro"
      security_group: "{{ sg_id }}"
      image_id: "{{ ami_id }}"
    loop: "{{ instances }}"
    register: ec2_instances ## all the output for the above steps are stored in register
  
  - name: print the output
    ansible.builtin.debug:
      msg: "{{ ec2_instances }}"

  # Private Records or Frontend, backend, SQL
    
  - name: create r53 records #noting but getting the IPs from above output
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ item.item }}.{{ zone }}"  # first one gives mysql, second one is devopsveda.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"

    #   Public Records or public Ip creation
  - name: create public r53 records for frontend #noting but getting the IPs from above output
    amazon.aws.route53:
      state: present
      zone: "{{ zone }}"
      record: "{{ zone }}"  #devopsveda.online
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_instances.results }}"
    when: item.item == "frontend"